name: sm-system
services:
  mongo:
    image: mongo:4.4
    command: ["--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - mongo_data:/data/db
    networks:
      - sms-network
    healthcheck:
      # Simplified health check that doesn't require replica set to be initialized
      test: ["CMD", "mongo", "--eval", "db.stats()"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 20s
    restart: unless-stopped

  mongo-init:
    image: mongo:4.4
    restart: "no"
    depends_on:
      mongo:
        condition: service_healthy
    # More robust replica set initialization
    command: >
      bash -c "
      echo 'Waiting for MongoDB to start...' &&
      sleep 5 &&
      mongo --host mongo:27017 --eval '
      if (!rs.isMaster().ismaster) {
        rs.initiate({_id: \"rs0\", members: [{_id: 0, host: \"mongo:27017\"}]});
        while (!rs.isMaster().ismaster) {
          print(\"Waiting for replica set to initialize...\");
          sleep(1000);
        }
        print(\"Replica set initialized and I am primary\");
      } else {
        print(\"Replica set already initialized\");
      }
      '
      "
    networks:
      - sms-network
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: ./backend/.env
    ports:
      - "127.0.0.1:4000:4000"
    networks:
      - sms-network
    depends_on:
      mongo-init:
        condition: service_completed_successfully

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_SERVER_URL=https://store.jkkniu.edu.bd/api/v1
    restart: unless-stopped
    env_file: ./frontend/.env
    volumes:
      - frontend_build:/srv
    networks:
      - sms-network
    depends_on:
      - backend

  caddy:
    image: caddy:2
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - frontend_build:/srv
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - sms-network

volumes:
  mongo_data:
  frontend_build:
  caddy_data:
  caddy_config:

networks:
  sms-network:
    driver: bridge